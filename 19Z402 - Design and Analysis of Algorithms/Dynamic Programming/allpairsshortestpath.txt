For a graph of N vertices, assume that we have edgeweight matrix of size N * N.
A cost matrix, which is a deep copy of the edgeweight matrix

FOR relaxindex = 0 TO n - 2:
    FOR row = 0 TO N - 1:
        FOR col = 0 to N - 1:
            cost[row][col] = MIN( cost[row][col], cost[row][relaxindex] + cost[relaxindex][col] )

In this pseudocode, relaxindex is the intermediate vertex we're considering, and row and col are the start and end vertices of the path. 
For each pair of vertices (row, col), we try to improve the shortest path between them by including relaxindex as an intermediate vertex in the path. 
If the path row -> relaxindex -> col is shorter than the current shortest path row -> col, we update the shortest path. We do this for all pairs of vertices for each possible intermediate vertex.